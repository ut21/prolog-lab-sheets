isValidCNF(phi):
	phi = C1 and C2 and C3 ... and Ck
	for i in range 1,k:
		if not(isValidDisClause(Ci)) return False;
	return True;

isValidDisClause(C):
	C = L1 or L2 or ... Lk
	for i in range 1,k:
		if (Li is p):
			for j in range i,k:
				if (Lj is not p):
					return True;
		else:
			for j in range i,k:
				if (Lj is p):
					return True;
	return False;
	
The complexity of this is m^2*n where n is the number of conjunctive clause (Ci) and m is the maximum number of literals (Li) in some Ci. This is significantly better than the complexity of checking validity of a formula using truth table (this method entails checking all entries of truth table to see that the output evaluates to True for all assignment to Ci, which is (2^k)*(n*m) where k is the different propositional atoms used in the formula.
